(*****************************************************************************
*
* Name     : KWParser
*
* LastEdit : 23/05/87
* Purpose  : Keyword search expression parser
* 
* Author   : Guido Hoss
* System   : LOGITECH MODULA-2/86, SYSTEM VERSION 3.00
*            Copyright 1987, 2016 by Guido Hoss. All Rights Reserved. 
*
* KeyDex is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
* Git repository page: https://github.com/ghoss/KeyDex
*
* Change History:
* --------------
* 21/03/87 : Introduction of "DeleteScr".
* 28/03/87 : Introduction of "CurrentScr".
* 12/04/87 : Introduction of "ValidParseChar".
* 03/05/87 : Changes for more than 2^16 found screens.
* 13/06/87 : Modified definition of "Parse".
* 28/04/16 : Code cleanup and release under GPLv3 license
******************************************************************************)

DEFINITION MODULE KWParser;

FROM LongCardinals IMPORT LONGCARD;


PROCEDURE Parse( s          : ARRAY OF CHAR;
                 wordOnly, 
                 ignoreCase,
                 prompt     : BOOLEAN;
                 VAR found,
                     foundOne,
                     scan,
                     err    : BOOLEAN );
(* Builds a list of all screens for application appl matching expression s.
   Returns TRUE if number of matching screens > 0. err=TRUE if s contains
   an error. Scan settings must also be supplied. "scan" returns TRUE if
   a sequential scan was necessary. *) 

PROCEDURE DisposeList;
(* Disposes all elements of the application's screen list *)

PROCEDURE ReturnTotal(VAR t : LONGCARD);
(* Returns total number of screens in screen list. *)

PROCEDURE NextScr(VAR pos:LONGCARD);
PROCEDURE PrevScr(VAR pos:LONGCARD);
(* Returns position of next/previous screen in list in pos *)

PROCEDURE FirstScr(VAR pos:LONGCARD);
PROCEDURE LastScr(VAR pos:LONGCARD);
(* Skip to first/last screen in list *)

PROCEDURE CurrentScr(VAR pos:LONGCARD);
(* Returns position of current screen *)

PROCEDURE DeleteScr(pos:LONGCARD);
(* Delete specified screen from screen lists of all applications. State of
   lists can be requested with 'ListEmpty'. *)

END KWParser.
